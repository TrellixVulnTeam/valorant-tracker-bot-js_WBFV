const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const axios = require('axios');
require('dotenv').config();

module.exports = {
    data: new SlashCommandBuilder()
        .setName('reg')
        .setDescription('–ü—Ä–∏–≤\'—è–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç—É Discord –¥–æ –∞–∫–∫–∞—É–Ω—Ç—É Valorant')
        .addStringOption(option =>
            option.setName('name')
                .setDescription('–ù—ñ–∫ Valorant')
                .setRequired(true))
        .addStringOption(option =>
            option.setName('tag')
                .setDescription('–¢–µ–≥ Valorant')
                .setRequired(true)),

    async execute(interaction, client) {
        const message = await interaction.deferReply({
            fetchReply: true,
            ephemeral: true
        });

        const name = interaction.options.getString('name');
        const tag = interaction.options.getString('tag');
        
        try {
            const res = await axios.get(`https://api.henrikdev.xyz/valorant/v1/account/${name}/${tag}`, {
                headers: {
                    'Authorization': `${process.env.api_key}`
                }
            });
            console.log(res.data)


            
        } catch (error) {
            const err = error.response.data.status;
            let title, description;
            switch (err) {
                case 404:
                    title = '–ù–µ–≤—ñ—Ä–Ω–æ –≤–∫–∞–∑–∞–Ω–æ –Ω—ñ–∫ –∞–±–æ —Ç–µ–≥ üß¨';
                    description = '–ü–µ—Ä–µ–≤—ñ—Ä –±—É–¥—å –ª–∞—Å–∫–∞ —á–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–Ω—ñ –¥–∞–Ω—ñ, –∑–Ω–∞–∫—É \'#\' **–ù–ï** –ø–æ—Ç—Ä—ñ–±–Ω–æ';
                    break;
                case 400:
                    title = '–ù–µ–≤—ñ—Ä–Ω–æ –≤–∫–∞–∑–∞–Ω–æ –Ω—ñ–∫ –∞–±–æ —Ç–µ–≥ üß¨';
                    description = '–ü–µ—Ä–µ–≤—ñ—Ä –±—É–¥—å –ª–∞—Å–∫–∞ —á–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–∫–∞–∑–∞–Ω—ñ –¥–∞–Ω—ñ, –∑–Ω–∞–∫—É \'#\' **–ù–ï** –ø–æ—Ç—Ä—ñ–±–Ω–æ\n';
                    break;
                case 500:
                    title = '–û–π, –∞ —Å—Ö–æ–∂–µ —â–æ —Å–µ—Ä–≤–µ—Ä—É –∑–∞—Ä–∞–∑ –ø–æ–≥–∞–Ω–æ ü•≤';
                    description = '–¢—É—Ç –º–∏ –±–µ–∑—Å–∏–ª—ñ, —á–µ–∫–∞—î–º–æ fix';
                    break;
                case 429:
                    title = '–õ—ñ–º—ñ—Ç –∑–∞–ø–∏—Ç—ñ–≤ –ø–µ—Ä–µ–≤–∏—â–µ–Ω–æ üò•';
                    description = '–°–ø—Ä–æ–±—É–π –±—É–¥—å –ª–∞—Å–∫–∞ —â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ —Ö–≤–∏–ª–∏–Ω—É';
                    break;
                default:
                    title = '–£–ø—Å—Å—Å, —è –ø–æ–ª–∞–º–∞–≤—Å—è ü§®';
                    description = '–ó–≤\'—è–∂–∏—Å—å –∑ –∞–¥–º—ñ–Ω–æ–º, –Ω–µ—Ö–∞–π –≥–ª—è–Ω–µ —â–æ —Ç–∞–º —Å—Ç–∞–ª–æ—Å—å';                
            };
            embed = new EmbedBuilder()
                        .setTitle(`${title}`)
                        .setDescription(`${description}`)
                        .setColor('#f80c0c')
                        .setTimestamp(Date.now());

                        await interaction.editReply({
                            embeds: [embed],
            });
            
        }          
    }
};